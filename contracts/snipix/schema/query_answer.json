{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryAnswer",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "token_info"
      ],
      "properties": {
        "token_info": {
          "type": "object",
          "required": [
            "decimals",
            "name",
            "symbol"
          ],
          "properties": {
            "decimals": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "name": {
              "type": "string"
            },
            "symbol": {
              "type": "string"
            },
            "total_supply": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint128"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "token_config"
      ],
      "properties": {
        "token_config": {
          "type": "object",
          "required": [
            "burn_enabled",
            "deposit_enabled",
            "mint_enabled",
            "public_total_supply",
            "redeem_enabled"
          ],
          "properties": {
            "burn_enabled": {
              "type": "boolean"
            },
            "deposit_enabled": {
              "type": "boolean"
            },
            "mint_enabled": {
              "type": "boolean"
            },
            "public_total_supply": {
              "type": "boolean"
            },
            "redeem_enabled": {
              "type": "boolean"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "contract_status"
      ],
      "properties": {
        "contract_status": {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "status": {
              "$ref": "#/definitions/ContractStatusLevel"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "exchange_rate"
      ],
      "properties": {
        "exchange_rate": {
          "type": "object",
          "required": [
            "denom",
            "rate"
          ],
          "properties": {
            "denom": {
              "type": "string"
            },
            "rate": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "allowance"
      ],
      "properties": {
        "allowance": {
          "type": "object",
          "required": [
            "allowance",
            "owner",
            "spender"
          ],
          "properties": {
            "allowance": {
              "$ref": "#/definitions/Uint128"
            },
            "expiration": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "owner": {
              "$ref": "#/definitions/HumanAddr"
            },
            "spender": {
              "$ref": "#/definitions/HumanAddr"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "balance"
      ],
      "properties": {
        "balance": {
          "type": "object",
          "required": [
            "amount"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "transfer_history"
      ],
      "properties": {
        "transfer_history": {
          "type": "object",
          "required": [
            "txs"
          ],
          "properties": {
            "total": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "txs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tx"
              }
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "transaction_history"
      ],
      "properties": {
        "transaction_history": {
          "type": "object",
          "required": [
            "txs"
          ],
          "properties": {
            "total": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "txs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RichTx"
              }
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "viewing_key_error"
      ],
      "properties": {
        "viewing_key_error": {
          "type": "object",
          "required": [
            "msg"
          ],
          "properties": {
            "msg": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "minters"
      ],
      "properties": {
        "minters": {
          "type": "object",
          "required": [
            "minters"
          ],
          "properties": {
            "minters": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HumanAddr"
              }
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "marketing_info"
      ],
      "properties": {
        "marketing_info": {
          "type": "object",
          "properties": {
            "marketing_info": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MarketingInfo"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      }
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "ContractStatusLevel": {
      "type": "string",
      "enum": [
        "normal_run",
        "stop_all_but_redeems",
        "stop_all"
      ]
    },
    "EmbeddedLogo": {
      "description": "This is used to store the logo on the blockchain in an accepted format. Enforce maximum size of 5KB on all variants.",
      "anyOf": [
        {
          "description": "Store the Logo as an SVG file. The content must conform to the spec at https://en.wikipedia.org/wiki/Scalable_Vector_Graphics (The contract should do some light-weight sanity-check validation)",
          "type": "object",
          "required": [
            "svg"
          ],
          "properties": {
            "svg": {
              "$ref": "#/definitions/Binary"
            }
          }
        },
        {
          "description": "Store the Logo as a PNG file. This will likely only support up to 64x64 or so within the 5KB limit.",
          "type": "object",
          "required": [
            "png"
          ],
          "properties": {
            "png": {
              "$ref": "#/definitions/Binary"
            }
          }
        }
      ]
    },
    "HumanAddr": {
      "type": "string"
    },
    "Logo": {
      "description": "This is used for uploading logo data, or setting it in InstantiateData",
      "anyOf": [
        {
          "description": "A reference to an externally hosted logo. Must be a valid HTTP or HTTPS URL.",
          "type": "object",
          "required": [
            "url"
          ],
          "properties": {
            "url": {
              "type": "string"
            }
          }
        },
        {
          "description": "Logo content stored on the blockchain. Enforce maximum size of 5KB on all variants",
          "type": "object",
          "required": [
            "embedded"
          ],
          "properties": {
            "embedded": {
              "$ref": "#/definitions/EmbeddedLogo"
            }
          }
        }
      ]
    },
    "MarketingInfo": {
      "type": "object",
      "properties": {
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "logo": {
          "anyOf": [
            {
              "$ref": "#/definitions/Logo"
            },
            {
              "type": "null"
            }
          ]
        },
        "marketing": {
          "type": [
            "string",
            "null"
          ]
        },
        "project": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "RichTx": {
      "type": "object",
      "required": [
        "action",
        "block_height",
        "block_time",
        "coins",
        "id"
      ],
      "properties": {
        "action": {
          "$ref": "#/definitions/TxAction"
        },
        "block_height": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "block_time": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "coins": {
          "$ref": "#/definitions/Coin"
        },
        "id": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "memo": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "Tx": {
      "type": "object",
      "required": [
        "coins",
        "from",
        "id",
        "receiver",
        "sender"
      ],
      "properties": {
        "block_height": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "block_time": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "coins": {
          "$ref": "#/definitions/Coin"
        },
        "from": {
          "$ref": "#/definitions/HumanAddr"
        },
        "id": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "memo": {
          "type": [
            "string",
            "null"
          ]
        },
        "receiver": {
          "$ref": "#/definitions/HumanAddr"
        },
        "sender": {
          "$ref": "#/definitions/HumanAddr"
        }
      }
    },
    "TxAction": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "transfer"
          ],
          "properties": {
            "transfer": {
              "type": "object",
              "required": [
                "from",
                "recipient",
                "sender"
              ],
              "properties": {
                "from": {
                  "$ref": "#/definitions/HumanAddr"
                },
                "recipient": {
                  "$ref": "#/definitions/HumanAddr"
                },
                "sender": {
                  "$ref": "#/definitions/HumanAddr"
                }
              }
            }
          }
        },
        {
          "type": "object",
          "required": [
            "mint"
          ],
          "properties": {
            "mint": {
              "type": "object",
              "required": [
                "minter",
                "recipient"
              ],
              "properties": {
                "minter": {
                  "$ref": "#/definitions/HumanAddr"
                },
                "recipient": {
                  "$ref": "#/definitions/HumanAddr"
                }
              }
            }
          }
        },
        {
          "type": "object",
          "required": [
            "burn"
          ],
          "properties": {
            "burn": {
              "type": "object",
              "required": [
                "burner",
                "owner"
              ],
              "properties": {
                "burner": {
                  "$ref": "#/definitions/HumanAddr"
                },
                "owner": {
                  "$ref": "#/definitions/HumanAddr"
                }
              }
            }
          }
        },
        {
          "type": "object",
          "required": [
            "deposit"
          ],
          "properties": {
            "deposit": {
              "type": "object"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "redeem"
          ],
          "properties": {
            "redeem": {
              "type": "object"
            }
          }
        }
      ]
    },
    "Uint128": {
      "type": "string"
    }
  }
}
